{"version":3,"file":"static/js/415.60256126.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","components/MovieList/MovieList.styled.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Home.jsx","services/tmdbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrap = styled.div`\n  display: flex;\n  margin-top: 24px;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrap } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrap>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n        wrapperStyle={{\n          display: 'flex',\n          justifyContent: 'center',\n        }}\n      />\n    </LoaderWrap>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport Section from 'components/Section/Section';\n\nimport {\n  ListOfMovies,\n  ListItem,\n  LinkMovie,\n  LinkMovieInfo,\n} from './MovieList.styled';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Section>\n      <ListOfMovies>\n        {movies.map(movie => {\n          const moviePoster = movie.poster_path\n            ? `https://image.tmdb.org/t/p/w400/${movie.poster_path}`\n            : 'https://d994l96tlvogv.cloudfront.net/uploads/film/poster/poster-image-coming-soon-placeholder-no-logo-500-x-740_29046.png';\n\n          return (\n            <ListItem key={movie.id}>\n              <LinkMovie to={`/movies/${movie.id}`} state={{ from: location }}>\n                <img src={moviePoster} alt={movie.original_title} width=\"240\" />\n                <LinkMovieInfo>{movie.title ?? movie.name}</LinkMovieInfo>\n              </LinkMovie>\n            </ListItem>\n          );\n        })}\n      </ListOfMovies>\n    </Section>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieListTitle = styled.h2`\n  text-align: center;\n  margin-top: 32px;\n  margin-bottom: 32px;\n  text-transform: uppercase;\n`;\n\nexport const ListOfMovies = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  width: 240px;\n  border-radius: 4px;\n  overflow: hidden;\n  box-shadow: ${props => props.theme.shadows.boxShadowDiv};\n  background: ${props => props.theme.colors.cardBackground};\n  padding: 4px;\n  transition: transform 250ms linear;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const LinkMovie = styled(NavLink)`\n  font-size: ${props => props.theme.fontSizes.l};\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const LinkMovieInfo = styled.p`\n  padding: 8px;\n  font-size: ${props => props.theme.fontSizes.ml};\n  font-weight: ${props => props.theme.fontWeights.medium};\n`;\n","import styled from 'styled-components';\n\nexport const SectionStyled = styled.section`\n  margin: 24px auto;\n`;\n","import { SectionStyled } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ children }) => {\n  return <SectionStyled>{children}</SectionStyled>;\n};\n\nSection.propTypes = {\n  children: PropTypes.any.isRequired,\n};\n\nexport default Section;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendMovies } from '../services/tmdbAPI';\nimport MovieList from 'components/MovieList/MovieList';\nimport { MovieListTitle } from 'components/MovieList//MovieList.styled';\n// import Section from 'components/Section/Section';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const getTrendMovies = async () => {\n      try {\n        setError(false);\n        setIsLoading(true);\n        const { results } = await fetchTrendMovies();\n        setTrendingMovies(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getTrendMovies();\n  }, []); //завантаження трендових фільмів\n\n  return (\n    <main>\n      <MovieListTitle>Trending today</MovieListTitle>\n      {error ? (\n        <p>\n          Sorry, we could not fetch the trending movies. Please try again later.\n        </p>\n      ) : null}\n      {isLoading ? <Loader /> : <MovieList movies={trendingMovies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '468e3ef92bf536e06364f01be3648edc';\n\nexport const fetchTrendMovies = async () => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMoviesByQueryName = async query => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(\n      `${API_URL}movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n    return data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\n// My API Key 468e3ef92bf536e06364f01be3648edc\n//Global axios defaults\n\n// axios.defaults.baseURL = `https://api.themoviedb.org/3`;\n// axios.defaults.params = {\n//   api_key: `468e3ef92bf536e06364f01be3648edc`,\n//   include_adult: false,\n// };\n\n// //const { data } - деструктуризація response.data\n\n// export const fetchTrendMovies = async (page = 1, language) => {\n//   try {\n//     const { data } = await axios.get('/trending/movie/day', {\n//       params: {\n//         page,\n//         language,\n//       },\n//     });\n//     return data;\n//   } catch (error) {\n//     throw new Error('Sory, there is no movies');\n//   }\n// };\n\n// export const fetchMoviesByQueryName = async (\n//   page = 1,\n//   query = '',\n//   language\n// ) => {\n//   try {\n//     const urlParam = query\n//       ? `/search/movie?page=${page}&query=${query}&language=${language}`\n//       : `/movie/upcoming?page=${page}&language=${language}`;\n//     const { data } = await axios.get(urlParam);\n//     return data;\n//   } catch (error) {\n//     throw new Error('Sory, there is no movie');\n//   }\n// };\n\n// export const fetchMoviesDetailsById = async (movieId, language) => {\n//   try {\n//     const { data } = await axios.get(`movie/${movieId}`, {\n//       params: {\n//         id: movieId,\n//         language,\n//       },\n//     });\n//     return data;\n//   } catch (error) {\n//     throw new Error('Sory, there is no movie with that name');\n//   }\n// };\n\n// export const fetchMoviesCast = async (movieId, language) => {\n//   try {\n//     const { data } = await axios.get(`movie/${movieId}/credits`, {\n//       params: {\n//         id: movieId,\n//         language,\n//       },\n//     });\n//     return data.cast;\n//   } catch (error) {\n//     throw new Error('Sory, there is no cast movie');\n//   }\n// };\n\n// export const fetchMoviesReviews = async (movieId, language) => {\n//   try {\n//     const { data } = await axios.get(`movie/${movieId}/reviews`, {\n//       params: {\n//         id: movieId,\n//         language,\n//       },\n//     });\n//     return data.results;\n//   } catch (error) {\n//     throw new Error('Sory, we don`t have any reviews for this movie');\n//   }\n// };\n"],"names":["LoaderWrap","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","wrapperStyle","display","justifyContent","movies","location","useLocation","map","movie","moviePoster","poster_path","to","id","state","from","src","alt","original_title","title","name","MovieListTitle","ListOfMovies","props","theme","colors","white","ListItem","shadows","boxShadowDiv","cardBackground","LinkMovie","NavLink","fontSizes","l","LinkMovieInfo","ml","fontWeights","medium","SectionStyled","children","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","getTrendMovies","fetchTrendMovies","results","API_URL","API_KEY","axios","data","Error","fetchMoviesByQueryName","query","fetchMovieDetailsById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}